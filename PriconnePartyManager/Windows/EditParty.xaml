<Window x:Class="PriconnePartyManager.Windows.EditParty"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PriconnePartyManager"
        xmlns:xaml="clr-namespace:PriconnePartyManager.Scripts.Xaml"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:interactivity="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
        xmlns:vm="clr-namespace:PriconnePartyManager.Scripts.Mvvm.ViewModel"
        xmlns:enum="clr-namespace:PriconnePartyManager.Scripts.Enum"
        mc:Ignorable="d"
        Title="EditParty" Height="450" Width="800">
    <Window.Resources>
        <xaml:RadioButtonConverter x:Key="EnumConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="145"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <!-- 保留
            <StackPanel Orientation="Horizontal">
                <RadioButton GroupName="UnitType" Content="全て" IsChecked="{Binding ShowUnitType.Value, ConverterParameter=All, Converter={StaticResource EnumConverter}}"/>
                <RadioButton GroupName="UnitType" Content="前衛" IsChecked="{Binding ShowUnitType.Value, ConverterParameter=Front, Converter={StaticResource EnumConverter}}"/>
                <RadioButton GroupName="UnitType" Content="中衛" IsChecked="{Binding ShowUnitType.Value, ConverterParameter=Middle, Converter={StaticResource EnumConverter}}"/>
                <RadioButton GroupName="UnitType" Content="後衛" IsChecked="{Binding ShowUnitType.Value, ConverterParameter=Back, Converter={StaticResource EnumConverter}}"/>
            </StackPanel>
            -->
            <!-- ユニット一覧 -->
            <xaml:MultiSelectListBox
                Grid.Row="0" 
                ItemsSource="{Binding UnitList}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                SelectedItems="{Binding SelectedUnit.Value}"
                SelectionMode="Multiple"
                Margin="0,0,0,0"
            >
                <b:Interaction.Behaviors>
                    <xaml:LimitSelectionBehavior Limit="5" />
                </b:Interaction.Behaviors>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <interactivity:EventToReactiveCommand Command="{Binding OnChangeSelected}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <!-- ItemsControl.Templateの設定 -->
                <!-- 主に Border コントロール等で全体の枠線や背景色の設定を行う -->
                <ListBox.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <Border>
                            <ScrollViewer>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>

                <!-- ItemsControl.ItemsPanel -->
                <!-- コレクション項目をどのようにレイアウトするか(リストの並び方をどうするか)を決定する -->
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel ItemWidth="100" ItemHeight="120" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <!-- ItemsControl.ItemTemplateを設定 -->
                <!-- 各項目のデータ オブジェクトをどのように表示するかを決定する(リストの中身をつくる) -->
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:UnitViewModel}">
                        <Grid>
                            <StackPanel Margin="5,5,5,0">
                                <Image Source="{Binding Icon.Value}" Visibility="{Binding IsVisibility.Value}"/>
                                <TextBlock Text="{Binding Name.Value}" FontSize="11" Foreground="Black" HorizontalAlignment="Center" Width="90" Height="15"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <!-- ListBox.ItemContainerStyleを設定 -->
                <!--項目にマウスが乗ったときに色を変える、項目が選択されたときに色を変える、といった動作を決定する-->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="IsSelected" Value="{Binding IsSelect.Value}"/>
                        <Setter Property="Foreground" Value="Gray" />
                        <Setter Property="FontSize" Value="15" />

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                </ListBox.ItemContainerStyle>
            </xaml:MultiSelectListBox>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="0" Background="Lavender">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="500"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <ListBox
                    Grid.Row="0" 
                    ItemsSource="{Binding PartyUnits}"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    SelectedItem="{Binding SelectedPartyUnit.Value}"
                    SelectionMode="Single"
                >
                    <!-- ItemsControl.Templateの設定 -->
                    <!-- 主に Border コントロール等で全体の枠線や背景色の設定を行う -->
                    <ListBox.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <Border>
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </ListBox.Template>

                    <!-- ItemsControl.ItemsPanel -->
                    <!-- コレクション項目をどのようにレイアウトするか(リストの並び方をどうするか)を決定する -->
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel ItemWidth="100" ItemHeight="145" HorizontalAlignment="Right"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <!-- ItemsControl.ItemTemplateを設定 -->
                    <!-- 各項目のデータ オブジェクトをどのように表示するかを決定する(リストの中身をつくる) -->
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:UserUnitViewModel}">
                            <Grid>
                                <!-- サムネ中身 -->
                                <StackPanel >
                                    <!-- サムネ -->
                                    <Image Source="{Binding Icon.Value}" Width="60" Margin="5,5,5,5"/>
                                    <!-- サポートチェック -->
                                    <CheckBox IsChecked="{Binding IsSupport.Value}" HorizontalAlignment="Center" Margin="0,0,0,5">
                                        <TextBlock Text="サポート" FontSize="11"></TextBlock>
                                    </CheckBox>
                                    <!-- ★選択 -->
                                    <ComboBox ItemsSource="{Binding Source={xaml:EnumList {x:Type enum:UnitRarity}}}" SelectedItem="{Binding Rarity.Value}" Margin="5,0,5,5">
                                        <ComboBox.Resources>
                                            <xaml:EnumDisplayConverter x:Key="EnumDisplayConv"/>
                                        </ComboBox.Resources>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConv}}" FontSize="11" Height="13"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <!-- ランク選択 -->
                                    <ComboBox ItemsSource="{Binding Source={xaml:EnumList {x:Type enum:UnitRank}}}" SelectedItem="{Binding Rank.Value}" Margin="5,0,5,0">
                                        <ComboBox.Resources>
                                            <xaml:EnumDisplayConverter x:Key="EnumDisplayConv"/>
                                        </ComboBox.Resources>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConv}}" FontSize="11" Height="13"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>


                    <!-- ListBox.ItemContainerStyleを設定 -->
                    <!--項目にマウスが乗ったときに色を変える、項目が選択されたときに色を変える、といった動作を決定する-->
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <TextBox Margin="10,10,10,0" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible">
                        <TextBox.Style>
                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <Style.Resources>
                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Top" Stretch="None">
                                        <VisualBrush.Visual>
                                            <Label Content="備考欄" Foreground="Gray"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Background" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Grid>
                <Grid Grid.Row="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Margin="10,10,0,10" Width="80" Height="30" IsCancel="True" Command="{Binding OnCancel}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                            <TextBlock Text="キャンセル"></TextBlock>
                        </Button>
                        <Button Margin="10,10,10,10" Width="80" Height="30" IsDefault="True" Command="{Binding OnSubmit}" Background="LightSkyBlue" IsEnabled="{Binding IsFullParty.Value}">
                            <TextBlock Text="保存"></TextBlock>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
