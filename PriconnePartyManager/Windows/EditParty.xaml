<Window x:Class="PriconnePartyManager.Windows.EditParty"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PriconnePartyManager"
        xmlns:xaml="clr-namespace:PriconnePartyManager.Scripts.Xaml"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:interactivity="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
        xmlns:vm="clr-namespace:PriconnePartyManager.Scripts.Mvvm.ViewModel"
        xmlns:enum="clr-namespace:PriconnePartyManager.Scripts.Enum"
        xmlns:controls="clr-namespace:PriconnePartyManager.Controls"
        mc:Ignorable="d"
        Title="EditParty" Height="550" Width="835">
    <Window.Resources>
        <xaml:RadioButtonConverter x:Key="EnumConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Row="0">
            <!-- ユニットタイプ絞込 -->
            <StackPanel Orientation="Horizontal" Margin="5,5,5,5">
                <RadioButton GroupName="UnitType" 
                             IsChecked="{Binding ShowUnitType.Value, ConverterParameter=All, Converter={StaticResource EnumConverter}}" 
                             Style="{StaticResource {x:Type ToggleButton}}">
                    <StackPanel Margin="10,2,10,2">
                        <TextBlock Text="全て" Margin="8,0,8,0"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton GroupName="UnitType" 
                             IsChecked="{Binding ShowUnitType.Value, ConverterParameter=Front, Converter={StaticResource EnumConverter}}" 
                             Style="{StaticResource {x:Type ToggleButton}}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,2,10,2">
                        <Image Source="/Resources/unit_type_front.png" Height="16" RenderOptions.BitmapScalingMode="Fant"></Image>
                        <TextBlock Text="前衛" Margin="2,0,0,0"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton GroupName="UnitType" 
                             IsChecked="{Binding ShowUnitType.Value, ConverterParameter=Middle, Converter={StaticResource EnumConverter}}"
                             Style="{StaticResource {x:Type ToggleButton}}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,2,10,2">
                        <Image Source="/Resources/unit_type_middle.png" Height="16" RenderOptions.BitmapScalingMode="Fant"></Image>
                        <TextBlock Text="中衛" Margin="2,0,0,0"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton GroupName="UnitType" 
                             IsChecked="{Binding ShowUnitType.Value, ConverterParameter=Back, Converter={StaticResource EnumConverter}}" 
                             Style="{StaticResource {x:Type ToggleButton}}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,2,10,2">
                        <Image Source="/Resources/unit_type_back.png" Height="16" RenderOptions.BitmapScalingMode="Fant"></Image>
                        <TextBlock Text="後衛" Margin="2,0,0,0"/>
                    </StackPanel>
                </RadioButton>
            </StackPanel>
            <!-- キャラ名での絞込 -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5,5,5,5">
                <TextBox Width="150" Text="{Binding SearchText.Value}">
                    <TextBox.Style>
                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Top" Stretch="None">
                                    <VisualBrush.Visual>
                                        <Label Content="キャラ名から検索" Foreground="Gray"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button Command="{Binding OnSearchTextChanged}" Margin="5,0,0,0">
                    <TextBlock Text="検索" Margin="5,0,5,0"/>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Row="1">
            <!-- ユニット一覧 -->
            <xaml:MultiSelectListBox x:Name="MultiSelectListBox"
                ItemsSource="{Binding UnitList}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                SelectedItemList="{Binding SelectedUnit.Value}"
                SelectionMode="Multiple"
            >
                <b:Interaction.Behaviors>
                    <xaml:LimitSelectionBehavior Limit="5" />
                </b:Interaction.Behaviors>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <interactivity:EventToReactiveCommand Command="{Binding OnChangeSelected}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <!-- ItemsControl.Templateの設定 -->
                <!-- 主に Border コントロール等で全体の枠線や背景色の設定を行う -->
                <ListBox.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <Border>
                            <ScrollViewer>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>

                <!-- ItemsControl.ItemsPanel -->
                <!-- コレクション項目をどのようにレイアウトするか(リストの並び方をどうするか)を決定する -->
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel ItemWidth="Auto" ItemHeight="Auto" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <!-- ItemsControl.ItemTemplateを設定 -->
                <!-- 各項目のデータ オブジェクトをどのように表示するかを決定する(リストの中身をつくる) -->
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:UnitViewModel}">
                        <controls:UnitThumbnail/> <!--Unit-->
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <!-- ListBox.ItemContainerStyleを設定 -->
                <!--項目にマウスが乗ったときに色を変える、項目が選択されたときに色を変える、といった動作を決定する-->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="IsSelected" Value="{Binding IsSelect.Value, Mode=TwoWay}"/>
                        <Setter Property="BorderBrush" Value="White" />
                        <Setter Property="FontSize" Value="15" />

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <Border BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" Background="{TemplateBinding Background}" 
                                            Visibility="{Binding IsVisibility.Value}" Margin="2,2,2,2">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="DarkGray" />
                                <Setter Property="BorderBrush" Value="DarkGray" />
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="DimGray" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                </ListBox.ItemContainerStyle>
            </xaml:MultiSelectListBox>
        </Grid>
        <Grid Grid.Row="2" Background="Lavender" Visibility="{Binding IsVisibleSelected.Value}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Row="0">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="10,5,10,0">
                    <Label Content="予想ダメージ" FontSize="11"/>
                    <TextBox Width="100" Height="19" Text="{Binding EstimateDamage.Value}"/>
                    <Label Content="万" FontSize="11"/>
                </StackPanel>
            </Grid>
            <Grid Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="500"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <ListBox
                        Grid.Row="0" 
                        ItemsSource="{Binding PartyUnits}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                        SelectedItem="{Binding SelectedPartyUnit.Value}"
                        SelectionMode="Single"
                    >
                        <!-- ItemsControl.Templateの設定 -->
                        <!-- 主に Border コントロール等で全体の枠線や背景色の設定を行う -->
                        <ListBox.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Border>
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>

                        <!-- ItemsControl.ItemsPanel -->
                        <!-- コレクション項目をどのようにレイアウトするか(リストの並び方をどうするか)を決定する -->
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel ItemWidth="100" ItemHeight="145" HorizontalAlignment="Right"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <!-- ItemsControl.ItemTemplateを設定 -->
                        <!-- 各項目のデータ オブジェクトをどのように表示するかを決定する(リストの中身をつくる) -->
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:UserUnitViewModel}">
                                <Grid>
                                    <!-- サムネ中身 -->
                                    <StackPanel >
                                        <!-- サムネ -->
                                        <Image Source="{Binding Icon.Value}" Width="60" Margin="5,5,5,5"/>
                                        <!-- サポートチェック -->
                                        <CheckBox IsChecked="{Binding IsSupport.Value}" HorizontalAlignment="Center" Margin="0,0,0,5">
                                            <TextBlock Text="サポート" FontSize="11"></TextBlock>
                                        </CheckBox>
                                        <!-- ★選択 -->
                                        <ComboBox ItemsSource="{Binding Source={xaml:EnumList {x:Type enum:UnitRarity}}}" SelectedItem="{Binding Rarity.Value}" Margin="5,0,5,5">
                                            <ComboBox.Resources>
                                                <xaml:EnumDisplayConverter x:Key="EnumDisplayConv"/>
                                            </ComboBox.Resources>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConv}}" FontSize="11" Height="13"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <!-- ランク選択 -->
                                        <ComboBox ItemsSource="{Binding Source={xaml:EnumList {x:Type enum:UnitRank}}}" SelectedItem="{Binding Rank.Value}" Margin="5,0,5,0">
                                            <ComboBox.Resources>
                                                <xaml:EnumDisplayConverter x:Key="EnumDisplayConv"/>
                                            </ComboBox.Resources>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Converter={StaticResource EnumDisplayConv}}" FontSize="11" Height="13"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>


                        <!-- ListBox.ItemContainerStyleを設定 -->
                        <!--項目にマウスが乗ったときに色を変える、項目が選択されたときに色を変える、といった動作を決定する-->
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <TextBox Text="{Binding PartyComment.Value}" Margin="10,5,10,0" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Visibility="{Binding IsVisibleSelected.Value}"  FontFamily="Menlo">
                            <TextBox.Style>
                                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                    <Style.Resources>
                                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Top" Stretch="None">
                                            <VisualBrush.Visual>
                                                <Label Content="備考欄" Foreground="Gray"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Style.Resources>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                            <Setter Property="Background" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                    <Grid Grid.Row="1">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Margin="10,10,0,10" Width="80" Height="30" IsCancel="True" 
                                    Command="{Binding OnCancel}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                                    Visibility="{Binding IsVisibleSelected.Value}">
                                <TextBlock Text="キャンセル"></TextBlock>
                            </Button>
                            <Button Margin="10,10,10,10" Width="80" Height="30" IsDefault="True" 
                                    Command="{Binding OnSubmit}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                                    Background="LightSkyBlue" IsEnabled="{Binding IsFullParty.Value}" 
                                    Visibility="{Binding IsVisibleSelected.Value}">
                                <TextBlock Text="保存"></TextBlock>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
